/*
class Item {
    int value, weight;
    Item(int x, int y){
        this.value =x;
        this.weight =y;
    }
}
*/
class cmp implements Comparator<Item>{
    public int compare(Item a,Item b){
        return b.value*a.weight-a.value*b.weight;
    }
}
class Solution {
    // Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int w, Item arr[], int n) {
        // Your code here
        Arrays.sort(arr,new cmp());
        int i=0;
        double res=0;
        while(i<n){
            if(arr[i].weight<=w){
                res+=arr[i].value;
                w=w-arr[i].weight;
            }
            else{
                res+=arr[i].value*((double)w/(double)arr[i].weight);
                break;
            }
            i++;
        }
         return res
    }
}
